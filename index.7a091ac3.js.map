{"mappings":"AC0BA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAvBM,EAuBA,EAAgB,SAAS,aAAa,CAAC,MArB7C,CAFM,EAAY,MAAM,IAAI,CAAC,AAyBpB,EAzByB,QAAQ,GAEhC,IAAI,CAAC,SAAC,CAAA,CAAG,CAAnB,EACE,IAAM,EAAU,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAO,KAGvD,OAAO,AAFS,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAO,KAEtC,CACnB,GAEA,AAgBS,EAhBJ,SAAS,CAAG,GACjB,EAAU,OAAO,CAAC,SAAC,CAAnB,EAA0B,OAAA,AAejB,EAfsB,WAAW,CAAC,E,GAIpC,MAAM,IAAI,CAAC,AAaL,EAbU,QAAQ,EAAE,GAAG,CAAC,SAAC,CAAtC,EAA8C,MAAA,CAC5C,KAAM,EAAG,WAAW,CAAC,IAAI,GACzB,SAAU,EAAG,OAAO,CAAC,QAAQ,CAC7B,OAAQ,OAAO,EAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAO,KAChD,IAAK,SAAS,EAAG,OAAO,CAAC,GAAG,CAAE,GAChC,C,EASF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// debugger;\nfunction sortList(list) {\n    var employees = Array.from(list.children);\n    employees.sort(function(a, b) {\n        var salaryA = Number(a.dataset.salary.replace(/\\D/g, \"\"));\n        var salaryB = Number(b.dataset.salary.replace(/\\D/g, \"\"));\n        return salaryB - salaryA;\n    });\n    list.innerHTML = \"\";\n    employees.forEach(function(el) {\n        return list.appendChild(el);\n    });\n}\nfunction getEmployees(list) {\n    return Array.from(list.children).map(function(el) {\n        return {\n            name: el.textContent.trim(),\n            position: el.dataset.position,\n            salary: Number(el.dataset.salary.replace(/\\D/g, \"\")),\n            age: parseInt(el.dataset.age, 10)\n        };\n    });\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var employeesList = document.querySelector(\"ul\");\n    sortList(employeesList);\n    getEmployees(employeesList);\n});\n\n//# sourceMappingURL=index.7a091ac3.js.map\n","'use strict';\n// debugger;\n\nfunction sortList(list) {\n  const employees = Array.from(list.children);\n\n  employees.sort((a, b) => {\n    const salaryA = Number(a.dataset.salary.replace(/\\D/g, ''));\n    const salaryB = Number(b.dataset.salary.replace(/\\D/g, ''));\n\n    return salaryB - salaryA;\n  });\n\n  list.innerHTML = '';\n  employees.forEach((el) => list.appendChild(el));\n}\n\nfunction getEmployees(list) {\n  return Array.from(list.children).map((el) => ({\n    name: el.textContent.trim(),\n    position: el.dataset.position,\n    salary: Number(el.dataset.salary.replace(/\\D/g, '')),\n    age: parseInt(el.dataset.age, 10),\n  }));\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const employeesList = document.querySelector('ul');\n\n  sortList(employeesList);\n\n  getEmployees(employeesList);\n});\n"],"names":["document","addEventListener","employees","employeesList","querySelector","Array","from","list","children","sort","a","b","salaryA","Number","dataset","salary","replace","salaryB","innerHTML","forEach","el","appendChild","map","name","textContent","trim","position","age","parseInt"],"version":3,"file":"index.7a091ac3.js.map"}